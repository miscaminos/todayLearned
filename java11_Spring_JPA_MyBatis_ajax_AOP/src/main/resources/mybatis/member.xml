<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="practice.spring.model.member.MemberMapper">

	<update id="updateFile" parameterType="MemberDTO">
		update member
		set fname = #{fname}
		where id = #{id}
	</update>
	<select id="total" parameterType="Map" resultType="int">
		select count(*) from member
		<where>
		   <choose>
		    <when test="col=='mname'">
		      mname like '%'||#{word}||'%'
		    </when>
		    <when test="col=='id'">
		      id like '%'||#{id}||'%'				    
		    </when>
		    <when test="col=='email'">
		      email like '%'||#{email}||'%'
		    </when>
		  </choose>
		</where>
	</select>
	<select id="list" parameterType="Map" resultType="MemberDTO">
		SELECT id, mname, tel, email, zipcode, address1, address2,
		fname, r
		FROM(
			SELECT id, mname, tel, email, zipcode, address1, address2,
			fname, rownum r
			FROM(
				SELECT id, mname, tel, email, zipcode, address1,
				address2, fname
				FROM member
				<where>
				   <choose>
				    <when test="col=='mname'">
				      mname like '%'||#{word}||'%'
				    </when>
				    <when test="col=='id'">
				      id like '%'||#{id}||'%'				    
				    </when>
				    <when test="col=='email'">
				      email like '%'||#{email}||'%'
				    </when>
				  </choose>
				</where>
				ORDER BY mdate DESC
			)
	<![CDATA[
		)where r >= #{sno} and r <= #{eno}
	]]>
	</select> 
	<update id="update" parameterType="MemberDTO">
		update member
		set tel = #{tel},
			email = #{email},
			zipcode = #{zipcode},
			address1 = #{address1},
			address2 = #{address2},
			job = #{job}
		where id = #{id}
	</update>
	<select id="read" parameterType="String" resultType="MemberDTO">
		select * from member
		where id = #{id}
	</select>
	<select id="getGrade" parameterType="String" resultType="String">
		select grade from member
		where id = #{id}
	</select>
	<select id="loginCheck" parameterType="Map" resultType="int">
		select count(*) from member
		where id = #{id}
		and passwd = #{passwd}
	</select>
	
	<select id="duplicatedId" parameterType="String" resultType="int">
		select count(*) from member
		where id = #{id}
	</select>
	<select id="duplicatedEmail" parameterType="String" resultType="int">
		select count(*) from member
		where email = #{email}
	</select>
	<insert id="create" parameterType="MemberDTO">
		INSERT INTO member(id, passwd, mname, tel, email, zipcode,
		address1, address2, job, mdate, fname, grade)
		VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode},
		#{address1}, #{address2}, #{job}, sysdate, #{fname}, 'H')
	</insert>
</mapper>